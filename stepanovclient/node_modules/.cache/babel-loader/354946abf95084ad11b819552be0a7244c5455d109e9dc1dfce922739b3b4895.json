{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaut1\\\\Desktop\\\\stepanov\\\\stepanovclient\\\\src\\\\components\\\\Main\\\\Work.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport ServiceCard from '../Service/ServiceCard';\nimport ServicesService from '../../services/services-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Work = () => {\n  _s();\n  const [services, setServices] = React.useState([]);\n  const fetchingServices = async () => {\n    try {\n      const response = await ServicesService.fetchServices();\n      setServices(response.data);\n    } catch {}\n  };\n  React.useEffect(() => {\n    fetchingServices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"work\",\n    children: [\"services.map((service, index) => (\", /*#__PURE__*/_jsxDEV(ServiceCard, {\n      service: service\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Work, \"6zIv7VYIWrxuvR7GDZce08FfVgw=\");\n_c = Work;\nexport default Work;\nvar _c;\n$RefreshReg$(_c, \"Work\");","map":{"version":3,"names":["React","ServiceCard","ServicesService","jsxDEV","_jsxDEV","Work","_s","services","setServices","useState","fetchingServices","response","fetchServices","data","useEffect","className","children","service","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kaut1/Desktop/stepanov/stepanovclient/src/components/Main/Work.tsx"],"sourcesContent":["\r\nimport * as React from 'react';\r\nimport { FC } from 'react';\r\nimport ServiceCard from '../Service/ServiceCard';\r\nimport { IService } from '../../models/IService';\r\nimport ServicesService from '../../services/services-service';\r\n\r\n\r\n\r\nconst Work: FC = () => {\r\n\r\n  const [services, setServices] = React.useState<IService[]>([]);\r\n\r\n  const fetchingServices = async () => {\r\n    try {\r\n      const response = await ServicesService.fetchServices();\r\n      setServices(response.data);\r\n    }\r\n    catch{}\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetchingServices();\r\n  }, [])\r\n  return (\r\n    <section className=\"work\">\r\n          services.map((service, index) => (\r\n            <ServiceCard key={index} service={service} />\r\n          )\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Work;\r\n\r\n"],"mappings":";;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,WAAW,MAAM,wBAAwB;AAEhD,OAAOC,eAAe,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9D,MAAMC,IAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAa,EAAE,CAAC;EAE9D,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,eAAe,CAACU,aAAa,CAAC,CAAC;MACtDJ,WAAW,CAACG,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CACD,MAAK,CAAC;EACR,CAAC;EAEDb,KAAK,CAACc,SAAS,CAAC,MAAM;IACpBJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EACN,oBACEN,OAAA;IAASW,SAAS,EAAC,MAAM;IAAAC,QAAA,GAAC,oCAElB,eAAAZ,OAAA,CAACH,WAAW;MAAagB,OAAO,EAAEA;IAAQ,GAAxBC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAC,KAErD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAEd,CAAC;AAAChB,EAAA,CAtBID,IAAQ;AAAAkB,EAAA,GAARlB,IAAQ;AAwBd,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}