{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaut1\\\\Desktop\\\\stepanov\\\\stepanovclient\\\\src\\\\components\\\\Admin\\\\News.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NewsService from '../../services/news-service';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsAdmin = () => {\n  _s();\n  const [head, setHead] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [imgLink, setImgLink] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [citata, setCitata] = useState(\"\");\n  const [headTwo, setHeadTwo] = useState(\"\");\n  const [descTwo, setDescTwo] = useState(\"\");\n  const [Tag, setTag] = useState(\"\");\n  const [imageFile, setImageFile] = useState(null);\n  const handleAddNew = async e => {\n    e.preventDefault();\n\n    // Создание объекта с данными новости\n    const newRecord = {\n      _id: \"\",\n      // Можно добавить логику для генерации ID, если необходимо\n      head: head,\n      date: date,\n      category: category,\n      imgLink: \"\",\n      // Ссылка на изображение будет сгенерирована на сервере\n      desc: desc,\n      citata: citata,\n      headTwo: headTwo,\n      descTwo: descTwo,\n      Tag: Tag.split(\",\") // Преобразование строки с тегами в массив\n    };\n    try {\n      if (imageFile) {\n        // Создайте объект Blob для файла\n        const blob = new Blob([imageFile], {\n          type: imageFile.type\n        });\n\n        // Используйте FileSaver.js для сохранения файла локально\n        saveAs(blob, imageFile.name);\n\n        // Добавьте логику для обработки загрузки изображения на сервер, если это также необходимо\n        // const response = await NewsService.uploadImage(imageFile);\n        // newRecord.imgLink = response.data.imageLink;\n      }\n\n      // Вызовите функцию для создания новости\n      const createdNewRecord = await NewsService.newsCreate(newRecord);\n      console.log('Созданная новость:', createdNewRecord, imageFile.name);\n      // Дополнительная логика после успешного создания новости\n    } catch (error) {\n      console.error('Ошибка при создании новости:', error);\n      // Обработка ошибок, если необходимо\n    }\n  };\n  const handleImageChange = e => {\n    const file = e.target.files && e.target.files[0];\n    if (file) {\n      setImageFile(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adminService\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"content__head quest-form__content-head content__head__headOne\",\n      children: \"Add News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      method: \"post\",\n      style: {\n        alignItems: \"flex-start\",\n        gap: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        value: head,\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Head\",\n        onChange: e => setHead(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input\",\n        value: desc,\n        name: \"desc\",\n        id: \"desc1\",\n        placeholder: \"Desc\",\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input\",\n        value: headTwo,\n        name: \"desc\",\n        id: \"desc2\",\n        placeholder: \"HeadDesc\",\n        onChange: e => setHeadTwo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        value: descTwo,\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"descSingle\",\n        onChange: e => setDescTwo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button about-form__button button__default\",\n        onClick: handleAddNew,\n        children: \"Add Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsAdmin, \"Y53z/M4TMeSSkmIsdCoSrpPhFVE=\");\n_c = NewsAdmin;\nexport default NewsAdmin;\nvar _c;\n$RefreshReg$(_c, \"NewsAdmin\");","map":{"version":3,"names":["React","useState","NewsService","saveAs","jsxDEV","_jsxDEV","NewsAdmin","_s","head","setHead","date","setDate","category","setCategory","imgLink","setImgLink","desc","setDesc","citata","setCitata","headTwo","setHeadTwo","descTwo","setDescTwo","Tag","setTag","imageFile","setImageFile","handleAddNew","e","preventDefault","newRecord","_id","split","blob","Blob","type","name","createdNewRecord","newsCreate","console","log","error","handleImageChange","file","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","method","style","alignItems","gap","value","id","placeholder","onChange","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kaut1/Desktop/stepanov/stepanovclient/src/components/Admin/News.tsx"],"sourcesContent":["import React, { ChangeEvent, useState } from 'react';\r\nimport { INews } from '../../models/INews';\r\nimport NewsService from '../../services/news-service';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst NewsAdmin = () => {\r\n  const [head, setHead] = useState<string>(\"\");\r\n  const [date, setDate] = useState<string>(\"\");\r\n  const [category, setCategory] = useState<string>(\"\");\r\n  const [imgLink, setImgLink] = useState<string>(\"\");\r\n  const [desc, setDesc] = useState<string>(\"\");\r\n  const [citata, setCitata] = useState<string>(\"\");\r\n  const [headTwo, setHeadTwo] = useState<string>(\"\");\r\n  const [descTwo, setDescTwo] = useState<string>(\"\");\r\n  const [Tag, setTag] = useState<string>(\"\");\r\n  const [imageFile, setImageFile] = useState<File | null>(null);\r\n\r\n  const handleAddNew = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // Создание объекта с данными новости\r\n    const newRecord: INews = {\r\n      _id: \"\", // Можно добавить логику для генерации ID, если необходимо\r\n      head: head,\r\n      date: date,\r\n      category: category,\r\n      imgLink: \"\", // Ссылка на изображение будет сгенерирована на сервере\r\n      desc: desc,\r\n      citata: citata,\r\n      headTwo: headTwo,\r\n      descTwo: descTwo,\r\n      Tag: Tag.split(\",\") // Преобразование строки с тегами в массив\r\n    };\r\n\r\n    try {\r\n      if (imageFile) {\r\n        // Создайте объект Blob для файла\r\n        const blob = new Blob([imageFile], { type: imageFile.type });\r\n\r\n        // Используйте FileSaver.js для сохранения файла локально\r\n        saveAs(blob, imageFile.name);\r\n\r\n        // Добавьте логику для обработки загрузки изображения на сервер, если это также необходимо\r\n        // const response = await NewsService.uploadImage(imageFile);\r\n        // newRecord.imgLink = response.data.imageLink;\r\n      }\r\n\r\n      // Вызовите функцию для создания новости\r\n      const createdNewRecord = await NewsService.newsCreate(newRecord);\r\n      console.log('Созданная новость:', createdNewRecord, imageFile.name);\r\n      // Дополнительная логика после успешного создания новости\r\n    } catch (error) {\r\n      console.error('Ошибка при создании новости:', error);\r\n      // Обработка ошибок, если необходимо\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files && e.target.files[0];\r\n    if (file) {\r\n      setImageFile(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='adminService'>\r\n      <h1 className=\"content__head quest-form__content-head content__head__headOne\">\r\n        Add News\r\n      </h1>\r\n      <form action=\"\" method=\"post\" style={{ alignItems: \"flex-start\", gap: \"20px\" }}>\r\n        <input className=\"input\" value={head} type=\"text\" name=\"name\" id=\"name\" placeholder=\"Head\" onChange={(e) => setHead(e.target.value)} />\r\n        <textarea className=\"input\" value={desc} name=\"desc\" id=\"desc1\" placeholder=\"Desc\" onChange={(e) => setDesc(e.target.value)}></textarea>\r\n        <textarea className=\"input\" value={headTwo} name=\"desc\" id=\"desc2\" placeholder=\"HeadDesc\" onChange={(e) => setHeadTwo(e.target.value)}></textarea>\r\n        <input className=\"input\" value={descTwo} type=\"text\" name=\"name\" id=\"name\" placeholder=\"descSingle\" onChange={(e) => setDescTwo(e.target.value)} />\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n        <button className=\"button about-form__button button__default\" onClick={handleAddNew}>\r\n          Add Now\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsAdmin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}