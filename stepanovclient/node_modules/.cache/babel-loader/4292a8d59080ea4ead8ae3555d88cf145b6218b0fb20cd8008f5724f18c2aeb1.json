{"ast":null,"code":"import $api from \"../http\";\nexport default class ServicesService {\n  static async fetchServices() {\n    return $api.get(`/service`);\n  }\n  static async serviceDeatails(id) {\n    return $api.get(`/service/?_id=${id}`);\n  }\n  static async createService(service) {\n    try {\n      const response = await $api.post('/createService', service);\n      return response.data;\n    } catch (error) {\n      console.error('Ошибка при создании проекта:', error);\n      throw error;\n    }\n  }\n\n  // Функция запроса на обновление проекта\n  static async updateProject(id, service) {\n    try {\n      const response = await $api.post(`/updateService`, [id, service]);\n      return response.data;\n    } catch (error) {\n      console.error('Ошибка при обновлении проекта:', error);\n      throw error;\n    }\n  }\n  static async serviceUpdate(service) {\n    return $api.post(`/updateService/`, service);\n  }\n}","map":{"version":3,"names":["$api","ServicesService","fetchServices","get","serviceDeatails","id","createService","service","response","post","data","error","console","updateProject","serviceUpdate"],"sources":["C:/Users/kaut1/Desktop/stepanov/stepanovclient/src/services/services-service.ts"],"sourcesContent":["\r\nimport {AxiosResponse} from \"axios\";\r\nimport $api from \"../http\";\r\nimport { IService } from \"../models/IService\";\r\n\r\n\r\n\r\nexport default class ServicesService{\r\n    static async fetchServices(){\r\n        return $api.get(`/service`)\r\n    }\r\n    static async serviceDeatails(id:string){\r\n        return $api.get(`/service/?_id=${id}`)\r\n    }\r\n    static async createService(service: IService) {\r\n        try {\r\n          const response = await $api.post('/createService', service);\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error('Ошибка при создании проекта:', error);\r\n          throw error;\r\n        }\r\n      }\r\n    \r\n      // Функция запроса на обновление проекта\r\n      static async updateProject(id: string, service: IService) {\r\n        try {\r\n          const response = await $api.post(`/updateService`, [id, service]);\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error('Ошибка при обновлении проекта:', error);\r\n          throw error;\r\n        }\r\n      }\r\n      static async serviceUpdate(service:IService){\r\n        return $api.post(`/updateService/`,  service)\r\n      }\r\n   \r\n}"],"mappings":"AAEA,OAAOA,IAAI,MAAM,SAAS;AAK1B,eAAe,MAAMC,eAAe;EAChC,aAAaC,aAAaA,CAAA,EAAE;IACxB,OAAOF,IAAI,CAACG,GAAG,CAAE,UAAS,CAAC;EAC/B;EACA,aAAaC,eAAeA,CAACC,EAAS,EAAC;IACnC,OAAOL,IAAI,CAACG,GAAG,CAAE,iBAAgBE,EAAG,EAAC,CAAC;EAC1C;EACA,aAAaC,aAAaA,CAACC,OAAiB,EAAE;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACS,IAAI,CAAC,gBAAgB,EAAEF,OAAO,CAAC;MAC3D,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,aAAaE,aAAaA,CAACR,EAAU,EAAEE,OAAiB,EAAE;IACxD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACS,IAAI,CAAE,gBAAe,EAAE,CAACJ,EAAE,EAAEE,OAAO,CAAC,CAAC;MACjE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,MAAMA,KAAK;IACb;EACF;EACA,aAAaG,aAAaA,CAACP,OAAgB,EAAC;IAC1C,OAAOP,IAAI,CAACS,IAAI,CAAE,iBAAgB,EAAGF,OAAO,CAAC;EAC/C;AAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}